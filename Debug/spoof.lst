SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 13-Mar-2021 01:27:58  PAGE    1

************ OBJECT LISTING ************

FILE NAME: C:\Users\Alec\Documents\CASIO\fx-9860G SDK\CASIOSpoof\spoof.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         spoof.c     1    /**
         spoof.c     2     * Using CASIO fx-9860G SDK Library
         spoof.c     3     *
         spoof.c     4     * @file spoof.c
         spoof.c     5     */
         spoof.c     6    #include "fxlib.h"
         spoof.c     7    
         spoof.c     8    /**
         spoof.c     9     * AddIn_main (program main function)
         spoof.c    10     *
         spoof.c    11     * @param isAppli   : 1 = This application is launched by MAIN MENU.
         spoof.c    12     *                  : 0 = This application is launched by a strip in eACT application.
         spoof.c    13     * @param OptionNum : Strip number (0~3)
         spoof.c    14     *                    (This parameter is only used when isAppli parameter is 0.)
         spoof.c    15     *
         spoof.c    16     * @return int: 1 = No error / 0 = Error
         spoof.c    17     */
         spoof.c    18    int AddIn_main(int isAppli, unsigned short OptionNum) {
P   00000000              _AddIn_main:                     ; function: AddIn_main
                                                           ; frame size=4
    00000000 4F22                   STS.L       PR,@-R15
         spoof.c    19            
         spoof.c    20            // clearing the whole vram and display driver
         spoof.c    21            Bdisp_AllClr_DDVRAM();
    00000002 D33D                   MOV.L       L413+4,R3  ; _Bdisp_AllClr_DDVRAM
    00000004 430B                   JSR         @R3
    00000006 0009                   NOP
         spoof.c    22    
         spoof.c    23            menu();
    00000008 B005                   BSR         _menu
    0000000A 0009                   NOP
         spoof.c    24    
         spoof.c    25            resetWindow();
    0000000C B102                   BSR         _resetWindow
    0000000E 0009                   NOP
         spoof.c    26            
         spoof.c    27            // @todo support reboot (if possible) or spoof reboot
         spoof.c    28    
         spoof.c    29        return 1;
         spoof.c    30    }
    00000010 4F26                   LDS.L       @R15+,PR
    00000012 000B                   RTS
    00000014 E001                   MOV         #1,R0
         spoof.c    31    
         spoof.c    32    /**
         spoof.c    33     * menu() displays the Reset menu.
         spoof.c    34     */
         spoof.c    35    int menu() {
    00000016              _menu:                           ; function: menu
                                                           ; frame size=32
         spoof.c    36            unsigned int key, page = 0, temp;
    00000016 E300                   MOV         #0,R3
    00000018 2FE6                   MOV.L       R14,@-R15
         spoof.c    37            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 13-Mar-2021 01:27:58  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         spoof.c    38            plotMenuPage( page );
    0000001A 6433                   MOV         R3,R4
    0000001C 2FD6                   MOV.L       R13,@-R15
    0000001E 2FC6                   MOV.L       R12,@-R15
    00000020 2FB6                   MOV.L       R11,@-R15
    00000022 2FA6                   MOV.L       R10,@-R15
    00000024 4F22                   STS.L       PR,@-R15
    00000026 7FF8                   ADD         #-8,R15
    00000028 2F32                   MOV.L       R3,@R15
    0000002A B031                   BSR         _plotMenuPage
    0000002C 0009                   NOP
    0000002E ED01                   MOV         #1,R13
    00000030 DA32                   MOV.L       L413+8,R10 ; _GetKey
    00000032 9B5F                   MOV.W       L413,R11   ; H'753A
    00000034 6CB3                   MOV         R11,R12
    00000036 7C04                   ADD         #4,R12
         spoof.c    39            
         spoof.c    40            while( 1 ) {
    00000038              L391:                             
         spoof.c    41            GetKey( &key );
    00000038 64F3                   MOV         R15,R4
    0000003A 4A0B                   JSR         @R10
    0000003C 7404                   ADD         #4,R4
         spoof.c    42                    if ( key == KEY_CTRL_F6 ) {
    0000003E 53F1                   MOV.L       @(4,R15),R3
    00000040 33C0                   CMP/EQ      R12,R3
    00000042 8B0E                   BF          L392
         spoof.c    43                            page < 1 ? page++ : page--;
    00000044 61F2                   MOV.L       @R15,R1
    00000046 31D2                   CMP/HS      R13,R1
    00000048 8904                   BT          L393
    0000004A 62F2                   MOV.L       @R15,R2
    0000004C 7201                   ADD         #1,R2
    0000004E 2F22                   MOV.L       R2,@R15
    00000050 A003                   BRA         L394
    00000052 0009                   NOP
    00000054              L393:                             
    00000054 63F2                   MOV.L       @R15,R3
    00000056 73FF                   ADD         #-1,R3
    00000058 2F32                   MOV.L       R3,@R15
    0000005A              L394:                             
         spoof.c    44                            plotMenuPage( page );
    0000005A B019                   BSR         _plotMenuPage
    0000005C 64F2                   MOV.L       @R15,R4
    0000005E AFEB                   BRA         L391
    00000060 0009                   NOP
    00000062              L392:                             
         spoof.c    45                    } else if ( key == KEY_CTRL_F2 && page == 1 ) {
    00000062 53F1                   MOV.L       @(4,R15),R3
    00000064 33B0                   CMP/EQ      R11,R3
    00000066 8BE7                   BF          L391
    00000068 60F2                   MOV.L       @R15,R0
    0000006A 8801                   CMP/EQ      #1,R0
    0000006C 8BE4                   BF          L391
         spoof.c    46                            temp = confirmWindow();
    0000006E B04F                   BSR         _confirmWindow
    00000070 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 13-Mar-2021 01:27:58  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000072 6E03                   MOV         R0,R14
         spoof.c    47                            plotMenuPage( page );
    00000074 B00C                   BSR         _plotMenuPage
    00000076 64F2                   MOV.L       @R15,R4
         spoof.c    48                            if ( temp == 1 ) {
    00000078 60E3                   MOV         R14,R0
    0000007A 8801                   CMP/EQ      #1,R0
    0000007C 8BDC                   BF          L391
         spoof.c    49                                    return 1;
    0000007E E001                   MOV         #1,R0
         spoof.c    50                            }
         spoof.c    51                    }
         spoof.c    52            }
         spoof.c    53    }
    00000080 7F08                   ADD         #8,R15
    00000082 4F26                   LDS.L       @R15+,PR
    00000084 6AF6                   MOV.L       @R15+,R10
    00000086 6BF6                   MOV.L       @R15+,R11
    00000088 6CF6                   MOV.L       @R15+,R12
    0000008A 6DF6                   MOV.L       @R15+,R13
    0000008C 000B                   RTS
    0000008E 6EF6                   MOV.L       @R15+,R14
         spoof.c    54    
         spoof.c    55    /**
         spoof.c    56     * plotMenuPage() plots a page of the reset page based on the given page parameter.
         spoof.c    57     *
         spoof.c    58     * @param int page: declares which page will be plotted.
         spoof.c    59     */
         spoof.c    60    int plotMenuPage( int page ) {
    00000090              _plotMenuPage:                   ; function: plotMenuPage
                                                           ; frame size=92
                                                           ; used runtime library name:
                                                           ; __quick_evn_mvn
    00000090 2FE6                   MOV.L       R14,@-R15
    00000092 2FD6                   MOV.L       R13,@-R15
    00000094 2FC6                   MOV.L       R12,@-R15
    00000096 2FB6                   MOV.L       R11,@-R15
    00000098 2FA6                   MOV.L       R10,@-R15
    0000009A 2F96                   MOV.L       R9,@-R15
    0000009C 4F22                   STS.L       PR,@-R15
    0000009E 4F12                   STS.L       MACL,@-R15
         spoof.c    61            unsigned int i;
         spoof.c    62            unsigned char * menuItems[][7] = {
         spoof.c    63                    {
         spoof.c    64                            "*****   RESET   *****",
         spoof.c    65                            "F1:Setup Data",
         spoof.c    66                            "F2:Main Memory",
         spoof.c    67                            "F3:Add-In",
         spoof.c    68                            "F4:Storage Memory",
         spoof.c    69                            "F5:Add-In&Storage",
         spoof.c    70                            "F6:Next Page"
         spoof.c    71                    },
         spoof.c    72                    {
         spoof.c    73                            "*****   RESET   *****",
         spoof.c    74                            "F1:Main&Storage",
         spoof.c    75                            "F2:Initialize All",
         spoof.c    76                            "",




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 13-Mar-2021 01:27:58  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         spoof.c    77                            "",
         spoof.c    78                            "",
         spoof.c    79                            "F6:Next Page"
         spoof.c    80                    }
         spoof.c    81            };
    000000A0 D217                   MOV.L       L413+12,R2 ; L317
    000000A2 7FC4                   ADD         #-60,R15
    000000A4 D317                   MOV.L       L413+16,R3 ; __quick_evn_mvn
    000000A6 61F3                   MOV         R15,R1
    000000A8 2F42                   MOV.L       R4,@R15
    000000AA 7104                   ADD         #4,R1
    000000AC 430B                   JSR         @R3
    000000AE E038                   MOV         #56,R0
         spoof.c    82            
         spoof.c    83            Bdisp_AllClr_DDVRAM();
    000000B0 D111                   MOV.L       L413+4,R1  ; _Bdisp_AllClr_DDVRAM
    000000B2 410B                   JSR         @R1
    000000B4 0009                   NOP
         spoof.c    84            
         spoof.c    85            for ( i = 0 ; i < 7 ; ++i ) {
    000000B6 EC00                   MOV         #0,R12
    000000B8 62F2                   MOV.L       @R15,R2
    000000BA 61F3                   MOV         R15,R1
    000000BC D912                   MOV.L       L413+20,R9 ; _Print
    000000BE EB07                   MOV         #7,R11
    000000C0 DA12                   MOV.L       L413+24,R10; _locate
    000000C2 ED01                   MOV         #1,R13
    000000C4 E31C                   MOV         #28,R3
    000000C6 7104                   ADD         #4,R1
    000000C8 0237                   MUL.L       R3,R2
    000000CA 0E1A                   STS         MACL,R14
    000000CC 3E1C                   ADD         R1,R14
    000000CE              L399:                             
         spoof.c    86                    locate( 1, i + 1 );
    000000CE 65D3                   MOV         R13,R5
    000000D0 4A0B                   JSR         @R10
    000000D2 E401                   MOV         #1,R4
         spoof.c    87                    Print( menuItems[page][i] );
    000000D4 490B                   JSR         @R9
    000000D6 64E6                   MOV.L       @R14+,R4
    000000D8 7C01                   ADD         #1,R12
    000000DA 3CB2                   CMP/HS      R11,R12
    000000DC 8FF7                   BF/S        L399
    000000DE 7D01                   ADD         #1,R13
         spoof.c    88            }
         spoof.c    89            
         spoof.c    90            // @todo buttons at the bottom need to be plotted
         spoof.c    91    }
    000000E0 7F3C                   ADD         #60,R15
    000000E2 4F16                   LDS.L       @R15+,MACL
    000000E4 4F26                   LDS.L       @R15+,PR
    000000E6 69F6                   MOV.L       @R15+,R9
    000000E8 6AF6                   MOV.L       @R15+,R10
    000000EA 6BF6                   MOV.L       @R15+,R11
    000000EC 6CF6                   MOV.L       @R15+,R12
    000000EE 6DF6                   MOV.L       @R15+,R13
    000000F0 000B                   RTS




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 13-Mar-2021 01:27:58  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000F2 6EF6                   MOV.L       @R15+,R14
    000000F4              L413:                             
    000000F4 753A                   .DATA.W     H'753A
    000000F6 0000                   .DATA.W     0
    000000F8 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    000000FC <00000000>             .DATA.L     _GetKey
    00000100 <00000000>             .DATA.L     L317
    00000104 <00000000>             .DATA.L     __quick_evn_mvn
    00000108 <00000000>             .DATA.L     _Print
    0000010C <00000000>             .DATA.L     _locate
         spoof.c    92    
         spoof.c    93    /**
         spoof.c    94     * confirmWindow() displays the 'Initialize All' reset confirmation window.
         spoof.c    95     *
         spoof.c    96     * @return int: returns which function button got pressed (1 or 6).
         spoof.c    97     */
         spoof.c    98    int confirmWindow() {
    00000110              _confirmWindow:                  ; function: confirmWindow
                                                           ; frame size=76
                                                           ; used runtime library name:
                                                           ; __quick_odd_mvn
    00000110 2FE6                   MOV.L       R14,@-R15
    00000112 2FD6                   MOV.L       R13,@-R15
    00000114 2FC6                   MOV.L       R12,@-R15
    00000116 2FB6                   MOV.L       R11,@-R15
    00000118 2FA6                   MOV.L       R10,@-R15
    0000011A 2F96                   MOV.L       R9,@-R15
    0000011C 2F86                   MOV.L       R8,@-R15
    0000011E 4F22                   STS.L       PR,@-R15
         spoof.c    99            unsigned int key, i;
         spoof.c   100            unsigned int windowY[] = { 7, 4, 1, 5, 5 };
    00000120 D231                   MOV.L       L414+4,R2  ; L333
    00000122 7FD4                   ADD         #-44,R15
    00000124 D331                   MOV.L       L414+8,R3  ; __quick_odd_mvn
    00000126 6BF3                   MOV         R15,R11
    00000128 7B18                   ADD         #24,R11
    0000012A 61F3                   MOV         R15,R1
    0000012C 7118                   ADD         #24,R1
    0000012E 430B                   JSR         @R3
    00000130 E014                   MOV         #20,R0
         spoof.c   101            unsigned char * windowItems[] = {
         spoof.c   102                    "Reset OK?",
         spoof.c   103                    "Initialize All",
         spoof.c   104                    "",
         spoof.c   105                    "Yes:[F1]",
         spoof.c   106                    "No :[F6]"
         spoof.c   107            };
    00000132 6AF3                   MOV         R15,R10
    00000134 D22E                   MOV.L       L414+12,R2 ; L335
    00000136 61F3                   MOV         R15,R1
    00000138 D32C                   MOV.L       L414+8,R3  ; __quick_odd_mvn
    0000013A 7A04                   ADD         #4,R10
    0000013C 7104                   ADD         #4,R1
    0000013E 430B                   JSR         @R3
    00000140 E014                   MOV         #20,R0
         spoof.c   108            
         spoof.c   109            PopUpWin( 5 );




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 13-Mar-2021 01:27:58  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000142 D12C                   MOV.L       L414+16,R1 ; _PopUpWin
    00000144 410B                   JSR         @R1
    00000146 E405                   MOV         #5,R4
    00000148 D82B                   MOV.L       L414+20,R8 ; _Print
    0000014A E905                   MOV         #5,R9
         spoof.c   110            for ( i = 0 ; i < 5 ; ++i ) {
    0000014C E400                   MOV         #0,R4
    0000014E 6C43                   MOV         R4,R12
    00000150 6E43                   MOV         R4,R14
    00000152 ED02                   MOV         #2,R13
    00000154              L400:                             
         spoof.c   111                    locate( windowY[i], i + 2 );
    00000154 D329                   MOV.L       L414+24,R3 ; _locate
    00000156 65D3                   MOV         R13,R5
    00000158 60E3                   MOV         R14,R0
    0000015A 430B                   JSR         @R3
    0000015C 04BE                   MOV.L       @(R0,R11),R4
         spoof.c   112                    Print( windowItems[i] );
    0000015E 60E3                   MOV         R14,R0
    00000160 480B                   JSR         @R8
    00000162 04AE                   MOV.L       @(R0,R10),R4
    00000164 7C01                   ADD         #1,R12
    00000166 7E04                   ADD         #4,R14
    00000168 3C92                   CMP/HS      R9,R12
    0000016A 8FF3                   BF/S        L400
    0000016C 7D01                   ADD         #1,R13
    0000016E DC24                   MOV.L       L414+28,R12; _GetKey
    00000170 9D38                   MOV.W       L414,R13   ; H'7539
    00000172 6ED3                   MOV         R13,R14
    00000174 7E05                   ADD         #5,R14
         spoof.c   113            }
         spoof.c   114            
         spoof.c   115            while( 1 ) {
    00000176              L402:                             
         spoof.c   116            GetKey( &key );
    00000176 4C0B                   JSR         @R12
    00000178 64F3                   MOV         R15,R4
         spoof.c   117                    if ( key == KEY_CTRL_F1 ) {
    0000017A 62F2                   MOV.L       @R15,R2
    0000017C 32D0                   CMP/EQ      R13,R2
    0000017E 8B03                   BF          L403
         spoof.c   118                            loadingBar();
    00000180 B010                   BSR         _loadingBar
    00000182 0009                   NOP
         spoof.c   119                            return 1;
    00000184 A004                   BRA         L404
    00000186 E001                   MOV         #1,R0
    00000188              L403:                             
         spoof.c   120                    } else if ( key == KEY_CTRL_F6 ) {
    00000188 62F2                   MOV.L       @R15,R2
    0000018A 32E0                   CMP/EQ      R14,R2
    0000018C 8BF3                   BF          L402
         spoof.c   121                            return 6;
    0000018E E006                   MOV         #6,R0
    00000190              L404:                             
         spoof.c   122                    }
         spoof.c   123        }




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 13-Mar-2021 01:27:58  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         spoof.c   124    }
    00000190 7F2C                   ADD         #44,R15
    00000192 4F26                   LDS.L       @R15+,PR
    00000194 68F6                   MOV.L       @R15+,R8
    00000196 69F6                   MOV.L       @R15+,R9
    00000198 6AF6                   MOV.L       @R15+,R10
    0000019A 6BF6                   MOV.L       @R15+,R11
    0000019C 6CF6                   MOV.L       @R15+,R12
    0000019E 6DF6                   MOV.L       @R15+,R13
    000001A0 000B                   RTS
    000001A2 6EF6                   MOV.L       @R15+,R14
         spoof.c   125    
         spoof.c   126    int loadingBar() {
    000001A4              _loadingBar:                     ; function: loadingBar
                                                           ; frame size=4
    000001A4 4F22                   STS.L       PR,@-R15
         spoof.c   127            // @todo make this work
         spoof.c   128            unsigned int key;
         spoof.c   129            plotMenuPage( 1 );
    000001A6 BF73                   BSR         _plotMenuPage
    000001A8 E401                   MOV         #1,R4
         spoof.c   130            PopUpWin( 5 );
    000001AA D212                   MOV.L       L414+16,R2 ; _PopUpWin
    000001AC 420B                   JSR         @R2
    000001AE E405                   MOV         #5,R4
         spoof.c   131            locate( 3, 3 );
    000001B0 D312                   MOV.L       L414+24,R3 ; _locate
    000001B2 E503                   MOV         #3,R5
    000001B4 430B                   JSR         @R3
    000001B6 6453                   MOV         R5,R4
         spoof.c   132            Print( ( unsigned char* ) "One Moment Please" );
    000001B8 D412                   MOV.L       L414+32,R4 ; L347
    000001BA D20F                   MOV.L       L414+20,R2 ; _Print
    000001BC 420B                   JSR         @R2
    000001BE 0009                   NOP
         spoof.c   133            
         spoof.c   134            Bdisp_PutDisp_DD();
    000001C0 D311                   MOV.L       L414+36,R3 ; _Bdisp_PutDisp_DD
    000001C2 430B                   JSR         @R3
    000001C4 0009                   NOP
         spoof.c   135            
         spoof.c   136            // temp
         spoof.c   137            /*while( 1 ) {
         spoof.c   138                    GetKey( &key );
         spoof.c   139                    if ( key )
         spoof.c   140                            return 1;
         spoof.c   141            }*/
         spoof.c   142            
         spoof.c   143            Sleep( 2000 );
    000001C6 940E                   MOV.W       L414+2,R4  ; H'07D0
    000001C8 D210                   MOV.L       L414+40,R2 ; _Sleep
    000001CA 420B                   JSR         @R2
    000001CC 0009                   NOP
         spoof.c   144            locate( 1, 1 );
    000001CE E501                   MOV         #1,R5
    000001D0 D30A                   MOV.L       L414+24,R3 ; _locate
    000001D2 430B                   JSR         @R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 13-Mar-2021 01:27:58  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001D4 6453                   MOV         R5,R4
         spoof.c   145            Print( ( unsigned char* ) "TEST" );
    000001D6 D40E                   MOV.L       L414+44,R4 ; L348
    000001D8 D207                   MOV.L       L414+20,R2 ; _Print
    000001DA 420B                   JSR         @R2
    000001DC 0009                   NOP
         spoof.c   146            plotMenuPage( 1 );
    000001DE E401                   MOV         #1,R4
    000001E0 AF56                   BRA         _plotMenuPage
    000001E2 4F26                   LDS.L       @R15+,PR
    000001E4              L414:                             
    000001E4 7539                   .DATA.W     H'7539
    000001E6 07D0                   .DATA.W     H'07D0
    000001E8 <00000000>             .DATA.L     L333
    000001EC <00000000>             .DATA.L     __quick_odd_mvn
    000001F0 <00000000>             .DATA.L     L335
    000001F4 <00000000>             .DATA.L     _PopUpWin
    000001F8 <00000000>             .DATA.L     _Print
    000001FC <00000000>             .DATA.L     _locate
    00000200 <00000000>             .DATA.L     _GetKey
    00000204 <00000000>             .DATA.L     L347
    00000208 <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    0000020C <00000000>             .DATA.L     _Sleep
    00000210 <00000000>             .DATA.L     L348
         spoof.c   147    }
         spoof.c   148    
         spoof.c   149    int resetWindow() {
    00000214              _resetWindow:                    ; function: resetWindow
                                                           ; frame size=76
                                                           ; used runtime library name:
                                                           ; __quick_odd_mvn
    00000214 2FE6                   MOV.L       R14,@-R15
    00000216 2FD6                   MOV.L       R13,@-R15
    00000218 2FC6                   MOV.L       R12,@-R15
    0000021A 2FB6                   MOV.L       R11,@-R15
    0000021C 2FA6                   MOV.L       R10,@-R15
    0000021E 2F96                   MOV.L       R9,@-R15
    00000220 2F86                   MOV.L       R8,@-R15
    00000222 4F22                   STS.L       PR,@-R15
         spoof.c   150            unsigned int key, i;
         spoof.c   151            unsigned int windowY[] = { 8, 4, 1, 1, 6 };
    00000224 D21C                   MOV.L       L415+2,R2  ; L353
    00000226 7FD4                   ADD         #-44,R15
    00000228 D31C                   MOV.L       L415+6,R3  ; __quick_odd_mvn
    0000022A 6BF3                   MOV         R15,R11
    0000022C 7B18                   ADD         #24,R11
    0000022E 61F3                   MOV         R15,R1
    00000230 7118                   ADD         #24,R1
    00000232 430B                   JSR         @R3
    00000234 E014                   MOV         #20,R0
         spoof.c   152            unsigned char * windowItems[] = {
         spoof.c   153                    "Reset!",
         spoof.c   154                    "Initialize All",
         spoof.c   155                    "",
         spoof.c   156                    "",
         spoof.c   157                    "Press:[EXIT]"
         spoof.c   158            };




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 13-Mar-2021 01:27:58  PAGE    9


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000236 6AF3                   MOV         R15,R10
    00000238 D219                   MOV.L       L415+10,R2 ; L355
    0000023A 61F3                   MOV         R15,R1
    0000023C D317                   MOV.L       L415+6,R3  ; __quick_odd_mvn
    0000023E 7A04                   ADD         #4,R10
    00000240 7104                   ADD         #4,R1
    00000242 430B                   JSR         @R3
    00000244 E014                   MOV         #20,R0
         spoof.c   159            
         spoof.c   160            PopUpWin( 5 );
    00000246 D117                   MOV.L       L415+14,R1 ; _PopUpWin
    00000248 410B                   JSR         @R1
    0000024A E405                   MOV         #5,R4
    0000024C D816                   MOV.L       L415+18,R8 ; _Print
    0000024E E905                   MOV         #5,R9
         spoof.c   161            for ( i = 0 ; i < 5 ; ++i ) {
    00000250 E400                   MOV         #0,R4
    00000252 6C43                   MOV         R4,R12
    00000254 6E43                   MOV         R4,R14
    00000256 ED02                   MOV         #2,R13
    00000258              L407:                             
         spoof.c   162                    locate( windowY[i], i + 2 );
    00000258 D314                   MOV.L       L415+22,R3 ; _locate
    0000025A 65D3                   MOV         R13,R5
    0000025C 60E3                   MOV         R14,R0
    0000025E 430B                   JSR         @R3
    00000260 04BE                   MOV.L       @(R0,R11),R4
         spoof.c   163                    Print( windowItems[i] );
    00000262 60E3                   MOV         R14,R0
    00000264 480B                   JSR         @R8
    00000266 04AE                   MOV.L       @(R0,R10),R4
    00000268 7C01                   ADD         #1,R12
    0000026A 7E04                   ADD         #4,R14
    0000026C 3C92                   CMP/HS      R9,R12
    0000026E 8FF3                   BF/S        L407
    00000270 7D01                   ADD         #1,R13
    00000272 DD0F                   MOV.L       L415+26,R13; _GetKey
    00000274 9E0F                   MOV.W       L415,R14   ; H'7532
         spoof.c   164            }
         spoof.c   165            
         spoof.c   166            while( 1 ) {
    00000276              L409:                             
         spoof.c   167                    GetKey( &key );
    00000276 4D0B                   JSR         @R13
    00000278 64F3                   MOV         R15,R4
         spoof.c   168                    if ( key == KEY_CTRL_EXIT ) {
    0000027A 62F2                   MOV.L       @R15,R2
    0000027C 32E0                   CMP/EQ      R14,R2
    0000027E 8BFA                   BF          L409
         spoof.c   169                            return 1;
    00000280 E001                   MOV         #1,R0
         spoof.c   170                    }
         spoof.c   171            }
         spoof.c   172    }
    00000282 7F2C                   ADD         #44,R15
    00000284 4F26                   LDS.L       @R15+,PR
    00000286 68F6                   MOV.L       @R15+,R8




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 13-Mar-2021 01:27:58  PAGE   10


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000288 69F6                   MOV.L       @R15+,R9
    0000028A 6AF6                   MOV.L       @R15+,R10
    0000028C 6BF6                   MOV.L       @R15+,R11
    0000028E 6CF6                   MOV.L       @R15+,R12
    00000290 6DF6                   MOV.L       @R15+,R13
    00000292 000B                   RTS
    00000294 6EF6                   MOV.L       @R15+,R14
    00000296              L415:                             
    00000296 7532                   .DATA.W     H'7532
    00000298 <00000000>             .DATA.L     L353
    0000029C <00000000>             .DATA.L     __quick_odd_mvn
    000002A0 <00000000>             .DATA.L     L355
    000002A4 <00000000>             .DATA.L     _PopUpWin
    000002A8 <00000000>             .DATA.L     _Print
    000002AC <00000000>             .DATA.L     _locate
    000002B0 <00000000>             .DATA.L     _GetKey
         spoof.c   173    
         spoof.c   174    #pragma section _BR_Size
         spoof.c   175    unsigned long BR_Size;
         spoof.c   176    #pragma section
         spoof.c   177    
         spoof.c   178    
         spoof.c   179    #pragma section _TOP
         spoof.c   180    
         spoof.c   181    /**
         spoof.c   182     * InitializeSystem
         spoof.c   183     *
         spoof.c   184     * @param isAppli   : 1 = Application / 0 = eActivity
         spoof.c   185     * @param OptionNum : Option Number (only eActivity)
         spoof.c   186     * 
         spoof.c   187     * @return int: 1 = No error / 0 = Error
         spoof.c   188     */
         spoof.c   189    int InitializeSystem(int isAppli, unsigned short OptionNum) {
P_T 00000000              _InitializeSystem:               ; function: InitializeSystem
                                                           ; frame size=0
         spoof.c   190        return INIT_ADDIN_APPLICATION(isAppli, OptionNum);
    00000000 D301                   MOV.L       L416+2,R3  ; _INIT_ADDIN_APPLICATION
    00000002 432B                   JMP         @R3
    00000004 0009                   NOP
    00000006              L416:                             
    00000006 0000                   .DATA.W     0
    00000008 <00000000>             .DATA.L     _INIT_ADDIN_APPLICATION
         spoof.c   191    }
         spoof.c   192    
         spoof.c   193    #pragma section
C   00000000              L317:
    00000000 <00000000>             .DATA.L     L318,L319,L320,L321,L322,L323,L324,L318,L325,L326,L327,L327,L327,L324
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 13-Mar-2021 01:27:58  PAGE   11


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             <00000000>   
             <00000000>   
             <00000000>   
    00000038              L333:
    00000038 0000000700             .DATA.L     H'00000007,H'00000004,H'00000001,H'00000005,H'00000005
             0000040000   
             0001000000   
             0500000005   
    0000004C              L335:
    0000004C <00000000>             .DATA.L     L336,L337,L327,L338,L339
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
    00000060              L347:
    00000060 4F6E65204D             .SDATA      "One Moment Please"
             6F6D656E74   
             20506C6561   
             7365         
    00000071 00                     .DATA.B     H'00
    00000072 00000002               .RES.W      1
    00000074              L348:
    00000074 54455354               .SDATA      "TEST"
    00000078 00                     .DATA.B     H'00
    00000079 00000001               .RES.B      1
    0000007A 00000002               .RES.W      1
    0000007C              L353:
    0000007C 0000000800             .DATA.L     H'00000008,H'00000004,H'00000001,H'00000001,H'00000006
             0000040000   
             0001000000   
             0100000006   
    00000090              L355:
    00000090 <00000000>             .DATA.L     L356,L337,L327,L327,L357
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
    000000A4              L318:
    000000A4 2A2A2A2A2A             .SDATA      "*****   RESET   *****"
             2020205245   
             5345542020   
             202A2A2A2A   
             2A           
    000000B9 00                     .DATA.B     H'00
    000000BA 00000002               .RES.W      1
    000000BC              L319:
    000000BC 46313A5365             .SDATA      "F1:Setup Data"
             7475702044   
             617461       
    000000C9 00                     .DATA.B     H'00
    000000CA 00000002               .RES.W      1
    000000CC              L320:
    000000CC 46323A4D61             .SDATA      "F2:Main Memory"
             696E204D65   
             6D6F7279     
    000000DA 00                     .DATA.B     H'00
    000000DB 00000001               .RES.B      1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 13-Mar-2021 01:27:58  PAGE   12


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000DC              L321:
    000000DC 46333A4164             .SDATA      "F3:Add-In"
             642D496E     
    000000E5 00                     .DATA.B     H'00
    000000E6 00000002               .RES.W      1
    000000E8              L322:
    000000E8 46343A5374             .SDATA      "F4:Storage Memory"
             6F72616765   
             204D656D6F   
             7279         
    000000F9 00                     .DATA.B     H'00
    000000FA 00000002               .RES.W      1
    000000FC              L323:
    000000FC 46353A4164             .SDATA      "F5:Add-In&Storage"
             642D496E26   
             53746F7261   
             6765         
    0000010D 00                     .DATA.B     H'00
    0000010E 00000002               .RES.W      1
    00000110              L324:
    00000110 46363A4E65             .SDATA      "F6:Next Page"
             7874205061   
             6765         
    0000011C 00                     .DATA.B     H'00
    0000011D 00000001               .RES.B      1
    0000011E 00000002               .RES.W      1
    00000120              L325:
    00000120 46313A4D61             .SDATA      "F1:Main&Storage"
             696E265374   
             6F72616765   
    0000012F 00                     .DATA.B     H'00
    00000130              L326:
    00000130 46323A496E             .SDATA      "F2:Initialize All"
             697469616C   
             697A652041   
             6C6C         
    00000141 00                     .DATA.B     H'00
    00000142 00000002               .RES.W      1
    00000144              L327:
    00000144 00                     .DATA.B     H'00
    00000145 00000001               .RES.B      1
    00000146 00000002               .RES.W      1
    00000148              L336:
    00000148 5265736574             .SDATA      "Reset OK?"
             204F4B3F     
    00000151 00                     .DATA.B     H'00
    00000152 00000002               .RES.W      1
    00000154              L337:
    00000154 496E697469             .SDATA      "Initialize All"
             616C697A65   
             20416C6C     
    00000162 00                     .DATA.B     H'00
    00000163 00000001               .RES.B      1
    00000164              L338:
    00000164 5965733A5B             .SDATA      "Yes:[F1]"
             46315D       
    0000016C 00                     .DATA.B     H'00




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 13-Mar-2021 01:27:58  PAGE   13


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000016D 00000001               .RES.B      1
    0000016E 00000002               .RES.W      1
    00000170              L339:
    00000170 4E6F203A5B             .SDATA      "No :[F6]"
             46365D       
    00000178 00                     .DATA.B     H'00
    00000179 00000001               .RES.B      1
    0000017A 00000002               .RES.W      1
    0000017C              L356:
    0000017C 5265736574             .SDATA      "Reset!"
             21           
    00000182 00                     .DATA.B     H'00
    00000183 00000001               .RES.B      1
    00000184              L357:
    00000184 5072657373             .SDATA      "Press:[EXIT]"
             3A5B455849   
             545D         
    00000190 00                     .DATA.B     H'00
B_B 00000000              _BR_Size:                        ; static: BR_Size
    00000000 00000004               .RES.L      1









































SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 13-Mar-2021 01:27:58  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:      193



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               000002B4 Byte(s)
PROGRAM  SECTION (P_BR_Size):                       00000000 Byte(s)
PROGRAM  SECTION (P_TOP):                           0000000C Byte(s)
CONSTANT SECTION (C):                               00000191 Byte(s)
CONSTANT SECTION (C_BR_Size):                       00000000 Byte(s)
CONSTANT SECTION (C_TOP):                           00000000 Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
DATA     SECTION (D_BR_Size):                       00000000 Byte(s)
DATA     SECTION (D_TOP):                           00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)
BSS      SECTION (B_BR_Size):                       00000004 Byte(s)
BSS      SECTION (B_TOP):                           00000000 Byte(s)

 TOTAL PROGRAM SIZE: 00000455 Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           10
NUMBER OF EXTERNAL DEFINITION SYMBOLS:           8
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            56






















*** COMMAND PARAMETER ***


  -subcommand=C:\Users\Alec\AppData\Local\Temp\hmk1C51.tmp 

